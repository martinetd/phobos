#!/bin/bash

#
#  All rights reserved (c) 2014-2024 CEA/DAM.
#
#  This file is part of Phobos.
#
#  Phobos is free software: you can redistribute it and/or modify it under
#  the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation, either version 2.1 of the Licence, or
#  (at your option) any later version.
#
#  Phobos is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public License
#  along with Phobos. If not, see <http://www.gnu.org/licenses/>.
#

#
# Integration test for put --grouping command
#

test_dir=$(dirname $(readlink -e $0))
. $test_dir/test_env.sh
. $test_dir/setup_db.sh
. $test_dir/test_launch_daemon.sh
. $test_dir/tape_drive.sh
. $test_dir/utils_generation.sh

################################################################################
#                                    SETUP                                     #
################################################################################

function setup()
{
    setup_tables
    export PHOBOS_DIR_dir_full_threshold=50
    if [[ -w /dev/changer ]]; then
        invoke_daemons
    else
        invoke_lrs
    fi

    DIR1=$(make_tmp_fs 300M)
    DIR2=$(make_tmp_fs 300M)
    setup_dummy_files 1 1M 100
}

function cleanup() {
    if [[ -w /dev/changer ]]; then
        waive_daemons
        drain_all_drives
    else
        waive_lrs
    fi

    drop_tables
    cleanup_tmp_fs ${DIR1}
    cleanup_tmp_fs ${DIR2}
    cleanup_dummy_files 1
}

function test_grouping_dir () {
    $phobos dir add ${DIR1}
    $phobos dir format --unlock ${DIR1}

    # put without any grouping
    $valg_phobos put -f dir --grouping my_group ${FILES[0]} dir_object ||
        error "Put on dir must success without any grouping dir available"

    dir_groupings=$($valg_phobos dir list -o groupings ${DIR1})
    if [[ "${dir_groupings}" != "['my_group']" ]]; then
        error "Dir groupings must be '['my_group']' instead of" \
              "'${dir_groupings}'"
    fi

    obj_grouping=$($valg_phobos object list -o grouping dir_object)
    if [[ "${obj_grouping}" != "my_group" ]]; then
        error "dir object grouping must be 'my_group' instead of" \
              "'${obj_grouping}'"
    fi

    # check with a second grouping and that is also added
    $valg_phobos put -f dir --grouping my_group_bis ${FILES[0]} dir_object_bis ||
        error "Put on dir must success without any bis grouping dir available"

    dir_groupings=$($valg_phobos dir list -o groupings ${DIR1})
    if [[ "${dir_groupings}" != "['my_group', 'my_group_bis']" ]]; then
        error "Dir groupings must be '['my_group', 'my_group_bis']' instead" \
              "of '${dir_groupings}'"
    fi

    obj_grouping=$($valg_phobos object list -o grouping dir_object_bis)
    if [[ "${obj_grouping}" != "my_group_bis" ]]; then
        error "dir object grouping bis must be 'my_group_bis' instead of" \
              "'${obj_grouping}'"
    fi

    # current dir must be full
    $valg_phobos put -f dir --grouping my_group ${FILES[0]} dir_object_ter &&
        error "Put on dir must fail with only full dir available"

    # check new dir is chosen
    $phobos dir add ${DIR2}
    $phobos dir format --unlock ${DIR2}
    $valg_phobos put -f dir --grouping my_group ${FILES[0]} dir_object_ter ||
        error "Put on new dir must success without any grouping dir available"

    dir_groupings=$($valg_phobos dir list -o groupings ${DIR2})
    if [[ "${dir_groupings}" != "['my_group']" ]]; then
        error "Dir groupings on new dir must be '['my_group']' instead of" \
              "'${dir_groupings}'"
    fi

    obj_grouping=$($valg_phobos object list -o grouping dir_object_ter)
    if [[ "${obj_grouping}" != "my_group" ]]; then
        error "dir object grouping ter must be 'my_group' instead of" \
              "'${obj_grouping}'"
    fi
}

function test_grouping_tape () {
    TAPES=( $(get_tapes L6 2 | nodeset -e) )
    DRIVE=$(get_lto_drives 6 1)

    $phobos tape add -t LTO6 ${TAPES[0]}
    $phobos drive add --unlock ${DRIVE}
    $phobos tape format --unlock ${TAPES[0]}

    # put without any grouping
    $valg_phobos put -f tape --grouping my_group ${FILES[0]} tape_object ||
        error "Put on tape must success without any grouping tape available"

    tape_groupings=$($valg_phobos tape list -o groupings ${TAPES[0]})
    if [[ "${tape_groupings}" != "['my_group']" ]]; then
        error "Tape groupings must be '['my_group']' instead of "
              "'${tape_groupings}'"
    fi

    obj_grouping=$($valg_phobos object list -o grouping tape_object)
    if [[ "${obj_grouping}" != "my_group" ]]; then
        error "tape object grouping must be 'my_group' instead of" \
              "'${obj_grouping}'"
    fi

    # check with a second grouping and that is also added
    $valg_phobos put -f tape --grouping my_group_bis ${FILES[0]} \
        tape_object_bis ||
        error "Put on tape must success without any bis grouping tape available"

    tape_groupings=$($valg_phobos tape list -o groupings ${TAPES[0]})
    if [[ "${tape_groupings}" != "['my_group', 'my_group_bis']" ]]; then
        error "Tape groupings must be '['my_group', 'my_group_bis']' instead" \
              "of '${tape_groupings}'"
    fi

    obj_grouping=$($valg_phobos object list -o grouping tape_object_bis)
    if [[ "${obj_grouping}" != "my_group_bis" ]]; then
        error "tape object bis grouping must be 'my_group_bis' instead of" \
              "'${obj_grouping}'"
    fi

    # unload tape with grouping and check it is used instead of the loaded one
    $phobos tape add -t LTO6 ${TAPES[1]}
    $phobos tape format --unlock ${TAPES[1]}
    $valg_phobos put -f tape --grouping my_group ${FILES[0]} tape_object_ter ||
        error "Put on tape must success with grouping tape unloaded"
    tape_object=$($valg_phobos extent list -o media_name tape_object_ter)
    if [[ "${tape_object}" != "['${TAPES[0]}']" ]]; then
        error "Grouping tape of the object must be ['${TAPES[0]}'] instead" \
              "of '${tape_object}'"
    fi

    obj_grouping=$($valg_phobos object list -o grouping tape_object_ter)
    if [[ "${obj_grouping}" != "my_group" ]]; then
        error "tape object ter grouping must be 'my_group' instead of" \
              "'${obj_grouping}'"
    fi
}

TEST_SETUP=setup

TESTS=("test_grouping_dir")
if [[ -w /dev/changer ]]; then
    TESTS+=("test_grouping_tape")
fi

TEST_CLEANUP=cleanup
